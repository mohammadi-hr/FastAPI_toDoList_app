services:
  backend:
    build: 
     context: . 
     dockerfile: Dockerfile.dev
    container_name: backend
    environment:
      
      PROJECT_NAME: "FastAPI Base To_Do_List Project"
      VERSION: str = "1.0.0"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: appdb
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      DATABASE_URL: postgresql://postgres:postgres@db:5432/appdb
      API_KEY: dev-key
      SECRET_KEY: str = "db6c54211e35dbbc8d9c2bfea563458d"
      ACCESS_TOKEN_EXPIRE_MINUTES: int = 30
      ACCESS_TOKEN_EXPIRE_DAYS: int = 7
      ALGORITHM: str = "HS256"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_URL: redis://redis:6379/0

      # ✅ اضافه شده برای RabbitMQ
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: rabbit
      RABBITMQ_PASSWORD: rabbit

    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./app:/usr/src/app/app
      - ./alembic:/usr/src/app/alembic
      - ./alembic.ini:/usr/src/app/alembic.ini
      - ./.env:/usr/src/app/.env
    command: >
      fastapi dev --host 0.0.0.0 --port 8000
    restart: always

  db:
    image: postgres:15-alpine
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: appdb
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d appdb"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 20s
    ports:
      - "5432:5432"

  redis:
      environment:
        redis_host: localhost
        redis_port: 6379
        redis_db: 0    
      image: redis:7-alpine
      container_name: redis-cache
      restart: always
      ports:
        - "6379:6379"
      healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 5s
        timeout: 3s
        retries: 5
        start_period: 10s


  elasticsearch:
      image: elasticsearch:8.12.0
      container_name: elasticsearch
      environment:
        - discovery.type=single-node
        - xpack.security.enabled=false
        - xpack.security.http.ssl.enabled=false
        - ES_JAVA_OPTS=-Xms512m -Xmx512m
      ulimits:
        memlock:
          soft: -1
          hard: -1
      volumes:
        - esdata:/usr/share/elasticsearch/data
      ports:
        - "9200:9200"
      healthcheck:
        test: [ "CMD-SHELL", "curl -fs http://localhost:9200/_cluster/health || exit 1" ]
        interval: 10s
        timeout: 10s
        retries: 10
        start_period: 30s
      restart: always
  kibana:
    image: kibana:8.12.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"     # پورت ارتباط برای برنامه‌ها
      - "15672:15672"   # پنل مدیریتی UI
    environment:
      RABBITMQ_DEFAULT_USER: rabbit
      RABBITMQ_DEFAULT_PASS: rabbit
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

volumes:
  esdata:

